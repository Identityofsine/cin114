version: '3'

services:
  nextjs:
    container_name: cin114 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/identityofsine/cin114:prod  # ðŸ‘ˆ ADD THIS LINE
    ports:
      - "3000:3000"
    hostname: nextjs 
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules #ignore 
      - /usr/src/app/.next #ingore 
    #never shut down the container, always restart
    restart: unless-stopped 
    command: npm start 
    networks:
      - shared-net

  api:
    container_name: fofx-go-gin-prod 
    environment:
      - GO_ENV=production
      - URI=https://api.cin114.net/
      - DOMAIN=cin114.net
      - FRONTEND_URI=https://cin114.net/
      - PORT=3001
      - DB_USER=postgres
      - DB_PASSWORD=docker
      - DB_NAME=app
    command: go run cmd/server/main.go
    ports:
      - "3030:3001"
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - shared-net

  db:
    container_name: fofx-go-gin-prod-db
    image: postgres:latest 
    restart: always
    tty: true
    volumes:
      - ./backend/sql/database.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - shared-net

networks:
  shared-net:
    external: true
    name: cin114-net

